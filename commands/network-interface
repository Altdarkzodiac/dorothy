#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"

function network-interface() (
	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Helpers for dealing with network interfaces.

			USAGE:
			network-interface <up|down|restart> <interface>
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # Invalid argument
	}

	# process
	local item action='' interface=''
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*)
			if test -z "$action"; then
				action="$item"
			elif test -z "$interface"; then
				interface="$item"
			else
				help "An unrecognised argument was provided: $item"
			fi
			;;
		esac
	done

	# ensure
	if test -z "$action" -o -z "$interface"; then
		help "You must provide both <action> and <interface>"
	fi

	# =====================================
	# Dependencies

	setup-util-netscript --optional --quiet

	# =====================================
	# Action

	# https://archlinux.org/news/deprecation-of-net-tools/
	# https://wiki.archlinux.org/title/Network_configuration#net-tools

	function up {
		if command-exists ip; then
			sudo ip link set "$interface" up
		else
			sudo ifup "$interface"
		fi
		sleep 1
	}
	function down {
		if command-exists ip; then
			sudo ip link set "$interface" down
		else
			sudo ifdown "$interface"
		fi
		sleep 1
	}
	function restart {
		if command-exists ip; then
			sudo ip link set "$interface" restart
		else
			down "$interface"
			up "$interface"
		fi
	}

	# =====================================
	# Act

	case "$action" in
	'up' | 'down' | 'restart')
		"$action" "${args[@]}"
		;;
	*)
		help "Unknown action: $action"
		;;
	esac
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	network-interface "$@"
fi
