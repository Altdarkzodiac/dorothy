#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"

# =====================================
# Arguments

# help
function help() {
	cat <<-EOF >/dev/stderr
		ABOUT:
		Run a command until it succeeds.

		USAGE:
		until-success [--timeout=10] -- <command...>
	EOF
	if test "$#" -ne 0; then
		echo-style $'\n' --error="ERROR:" $'\n' --red="$(echo-lines -- "$@")" >/dev/stderr
	fi
	return 22 # Invalid argument
}

# process
cmd=()
option_timeout=5
while test "$#" -ne 0; do
	item="$1"
	shift
	case "$item" in
	'help' | '--help' | '-h') help ;;
	'--timeout='*) option_timeout="${item:10}" ;;
	'--')
		cmd+=("$@")
		shift "$#"
		break
		;;
	'--'*) help "An unrecognised flag was provided: $item" ;;
	*) help "An unrecognised argument was provided: $item" ;;
	esac
done

# check
if test "${#cmd[@]}" -eq 0; then
	help "No command was provided"
fi

# =====================================
# Action

function until_success {
	("$@") || {
		echo-style --notice="FAILURE"
		echo-style --code="$*" " failed with exit code " --code="$?" ", trying again in " --code="$option_timeout" " seconds..."
		sleep "$option_timeout"
		until_success "$@"
	}
}

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	until_success "${cmd[@]}"
fi
