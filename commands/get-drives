#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"

function get-drives() (
	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Gets drives, their labels (aka models), and their serial numbers

			USAGE:
			get-drives
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # Invalid argument
	}

	# process
	local item
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) help "An unrecognised argument was provided: $item" ;;
		esac
	done

	# =====================================
	# Action

	if is-mac; then
		echo-error "Unsupported OS"
		return 19 # ENODEV 19 Operation not supported by device
	fi

	local drive size model serial __type
	while IFS=$'\t' read -r drive size model; do
		serial="$(sudo sginfo -a "$drive" | rg -o "Serial Number[ ']+(.+?)[ ']+" --replace '$1')"
		__type="$(sudo blkid "$drive" | rg -o 'TYPE="(.+?)"' --replace '$1')"
		printf '%s\t%s\t%s\t%s\t%s\n' "$drive" "$serial" "$model" "$size" "$__type"
	done < <(sudo fdisk -l | rg -Uo 'Disk (/dev/.+?): (.+?),.+\nDisk model: (.+)' --replace $'$1\t$2\t$3')
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	get-drives "$@"
fi
