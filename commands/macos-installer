#!/usr/bin/env bash

function macos-installer() (
	source "$DOROTHY/sources/strict.bash"
	source "$DOROTHY/sources/arrays.bash"
	requires_array_support 'mapfile'

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Download and select the latest macOS installer.

			USAGE:
			macos-installer
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # Invalid argument
	}

	# process
	local item
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) help "An unrecognised argument was provided: $item" ;;
		esac
	done

	# =====================================
	# Action

	function find_installers {
		expand-path '/Applications/Install macOS*'
	}
	function confirm_download {
		confirm --positive --ppid=$$ -- \
			'Download the latest macOS installer?' \
			'No macOS installers were detected on your system, so a download will be required to proceed.'
	}
	function do_download {
		if confirm_download; then
			# `softwareupdate --download` flag doesn't work, despite documentation
			softwareupdate --fetch-full-installer >/dev/tty
			return "$?"
		else
			return 125 # Operation canceled
		fi
	}

	local installers=()
	mapfile -t installers < <(find_installers)
	if test "${#installers[@]}" -eq 0; then
		do_download
		mapfile -t installers < <(find_installers)
		if test "${#installers[@]}" -eq 0; then
			cat <<-EOF >/dev/stderr
				$(echo-style --error='Even after fetching the installer, we could not find it. This is unexpected.')
				$(echo-style --error='Report an issue at: https://github.com/bevry/dorothy/issues')
			EOF
			return 65 # Package not installed
		fi
	fi

	# select a single installer if there were multiple
	choose-path --required --question="Which macOS installer to use?" -- "${installers[@]}"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	macos-installer "$@"
fi
