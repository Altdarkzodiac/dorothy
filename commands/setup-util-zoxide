#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"

# https://github.com/ajeetdsouza/zoxide
# https://github.com/ajeetdsouza/zoxide/releases
# z/cd alternative

# apt option is requires debian testing, instead of debian stable

# zoxide-v0.8.0-aarch64-apple-darwin.tar.gz
# zoxide-v0.8.0-aarch64-pc-windows-msvc.zip
# zoxide-v0.8.0-aarch64-unknown-linux-musl.tar.gz
# zoxide-v0.8.0-arm-unknown-linux-musleabihf.tar.gz
# zoxide-v0.8.0-armv7-unknown-linux-musleabihf.tar.gz
# zoxide-v0.8.0-x86_64-apple-darwin.tar.gz
# zoxide-v0.8.0-x86_64-pc-windows-msvc.zip
# zoxide-v0.8.0-x86_64-unknown-linux-musl.tar.g

function setup-util-zoxide() (
	# determine github args if github is an option on this platform
	local arch github_asset_filter='' github=()
	arch="$(get-arch)"
	if is-mac; then
		if test "$arch" = 'a64'; then
			github_asset_filter='-aarch64-apple-darwin.tar.gz'
		elif test "$arch" = 'x64'; then
			github_asset_filter='-x86_64-apple-darwin.tar.gz'
		fi
	elif test "$arch" = 'a64'; then
		github_asset_filter='-aarch64-unknown-linux-musl.tar.gz'
	elif test "$arch" = 'a32'; then
		github_asset_filter='-armv7-unknown-linux-musl'
	elif test "$arch" = 'x64'; then
		github_asset_filter='-x86_64-unknown-linux-musl.tar.g'
	fi
	if test -n "$github_asset_filter"; then
		github+=(
			GITHUB_SLUG='ajeetdsouza/zoxide'
			GITHUB_RELEASE='latest'
			GITHUB_ASSET_FILTER="$github_asset_filter"
			GITHUB_UNZIP_FILTER='**/zoxide'
			GITHUB_FILENAME='z'
		)
	fi

	# install, preferring github
	setup-util "$@" NAME='zoxide' CLI='z' \
		"${github[@]}" \
		AUR='zoxide-bin' \
		APK='zoxide' \
		BREW='zoxide' \
		CARGO='zoxide' \
		CONDA_CHANNEL='conda-forge' \
		CONDA='zoxide' \
		DNF_COPR='atim/zoxide' \
		DNF='zoxide' \
		NIX='nixpkgs.zoxide' \
		XBPS='zoxide' \
		EMERGE_EVAL='
		eselect repository enable dm9pZCAq
		emerge --sync dm9pZCAq
		emerge app-shells/zoxide' \
		-- github ...
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup-util-zoxide "$@"
fi
