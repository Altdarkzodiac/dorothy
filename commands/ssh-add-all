#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"
source "$DOROTHY/sources/nullglob.bash"

# ssh config file
mkdir -p "$HOME/.ssh"
if test ! -f "$HOME/.ssh/config"; then
	touch "$HOME/.ssh/config"
fi

# ensure correct permissions
chmod 700 "$HOME/.ssh"
find "$HOME/.ssh/"*.pub | while read -r f; do
	chmod 600 "$f"
	ok chmod 600 "${f%.pub}"
done

# add the keys
find "$HOME/.ssh/"*.pub | while read -r f; do
	p="${f%.pub}"
	if test -f "$p"; then
		if is-mac; then
			# Documentation:
			#
			# WARNING: The -K and -A flags are deprecated and have been replaced
			# by the --apple-use-keychain and --apple-load-keychain
			# flags, respectively.  To suppress this warning, set the
			# environment variable APPLE_SSH_ADD_BEHAVIOR as described in
			# the ssh-add(1) manual page.
			#
			# --apple-use-keychain:
			# When adding identities, each passphrase will also be stored in the user's keychain. When removing identities with -d, each passphrase will be removed from it.
			#
			# --apple-load-keychain
			# Add identities to the agent using any passphrase stored in the user's keychain.
			#
			/usr/bin/ssh-add --apple-use-keychain "$p" || ssh-add -K "$p" || ssh-add "$p"
		else
			# Attempt with keychain access first, otherwise without
			ssh-add -K "$p" || ssh-add "$p"
		fi
	fi
done

# tell all known keys to use keychain
if is-mac; then
	/usr/bin/ssh-add --apple-load-keychain
else
	ssh-add -A || :
fi
