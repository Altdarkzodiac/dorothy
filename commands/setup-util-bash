#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"

function setup-util-bash() (
	# prefer upgrade unless overridden
	setup-util --upgrade "$@" CLI='bash' \
		APK='bash' \
		APT='bash' \
		BREW='bash' \
		PACMAN='bash' \
		PAMAC='bash' \
		YUM='bash' \
		ZYPPER='bash'

	# no need to do fancy checks, as there is no failure if it is already present
	setup-util "$@" NAME='Bash Completions' \
		APK='bash-completion' \
		APT='bash-completion' \
		BREW='bash-completion' \
		PACMAN='bash-completion' \
		YUM='bash-completion'

	# ensure the login shell is no longer outdated
	local login_shell bash_shell
	login_shell="${SHELL-}"
	bash_shell="$(which bash)"
	if test -n "$login_shell"; then
		login_shell_name="$(basename "$login_shell")"
		if test "$login_shell_name" = 'bash' -a "$login_shell" != "$bash_shell"; then
			# trunk-ignore-begin(shellcheck/SC2016)
			login_shell_version="$("$login_shell" -c -- 'echo $BASH_VERSION')"
			bash_shell_version="$("$bash_shell" -c -- 'echo $BASH_VERSION')"
			# trunk-ignore-end(shellcheck/SC2016)
			if test "$login_shell_version" != "$bash_shell_version"; then
				echo-style --h2="Your login shell is an outdated version of bash."
				echo-style --h2="You will now be prompted now to change it to a more modern shell."
				select-shell
				echo-style --h2="Close this terminal, open a new one, then run the command you ran again."
				return 0
			fi
		fi
	fi
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup-util-bash "$@"
fi
