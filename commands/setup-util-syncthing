#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"

# https://github.com/syncthing/syncthing
# https://github.com/syncthing/syncthing/releases
# https://apt.syncthing.net/
# alternative to resilio sync

# syncthing-linux-386-v1.20.0-rc.1.tar.gz
# syncthing-linux-amd64-v1.20.0-rc.1.tar.gz
# syncthing-linux-arm-v1.20.0-rc.1.tar.gz
# syncthing-linux-arm64-v1.20.0-rc.1.tar.gz
# syncthing-linux-riscv64-v1.20.0-rc.1.tar.gz
# syncthing-macos-amd64-v1.20.0-rc.1.zip
# syncthing-macos-arm64-v1.20.0-rc.1.zip
# syncthing-macos-universal-v1.20.0-rc.1.zip
# syncthing-source-v1.20.0-rc.1.tar.gz

function setup-util-syncthing() (
	# determine github args if github is an option on this platform
	local arch github_asset_filter='' github=()
	arch="$(get-arch)"
	if is-mac; then
		if test "$arch" = 'a64'; then
			github_asset_filter='-macos-arm64-'
		elif test "$arch" = 'x64'; then
			github_asset_filter='-macos-amd64-'
		fi
	elif test "$arch" = 'a64'; then
		github_asset_filter='-linux-arm64-'
	elif test "$arch" = 'a32'; then
		github_asset_filter='-linux-arm-'
	elif test "$arch" = 'x64'; then
		github_asset_filter='-linux-amd64-'
	elif test "$arch" = 'x32'; then
		github_asset_filter='-linux-386-'
	fi
	if test -n "$github_asset_filter"; then
		github+=(
			GITHUB_SLUG='syncthing/syncthing'
			GITHUB_RELEASE='latest'
			GITHUB_ASSET_FILTER="$github_asset_filter"
			GITHUB_UNZIP_FILTER='**/syncthing'
			GITHUB_FILENAME='syncthing'
		)
	fi

	# install, preferring github
	# despite docs, no syncthing
	setup-util "$@" --cli='syncthing' \
		"${github[@]}" \
		APT_KEY='https://syncthing.net/release-key.gpg' \
		APT_REPO='deb [arch={ARCH} signed-by={KEY}] https://apt.syncthing.net/ syncthing stable' \
		APT='syncthing' \
		AUR='syncthing' \
		BREW='syncthing' \
		CARGO='syncthing' \
		CASK='homebrew/cask/syncthing' \
		CHOCO='syncthing' \
		NIX='syncthing' \
		PKG='syncthing' \
		PORT='syncthing' \
		RPM='syncthing' \
		SCOOP='syncthing' \
		XBPS='syncthing' \
		ZYPPER='syncthing' \
		-- cask apt ... github

	# brew services restart syncthing
	# ^ for brew, not cask

	# https://docs.syncthing.net/users/autostart.html#linux
	if confirm-positive --ppid=$$ -- 'Do you wish to autostart syncthing?'; then
		local desktop desktop_autostart
		desktop=/usr/share/applications/syncthing-start.desktop
		desktop_autostart="$HOME/.config/autostart/syncthing-start.desktop"
		if is-headful && test -e "$desktop"; then
			# https://docs.syncthing.net/users/autostart.html#using-the-desktop-environment-kde-gnome-xfce-cinnamon
			symlink-helper \
				--existing="$desktop" \
				--symlink="$desktop_autostart"
		else
			# https://docs.syncthing.net/users/autostart.html#using-systemd
			# echo 'autostart not yet implemented on headless' > /dev/stderr
			local user
			user="$(whoami)"
			sudo systemctl enable "syncthing@$user.service"
			sudo systemctl start "syncthing@$user.service"
		fi
	fi

	# https://docs.syncthing.net/users/config.html
	# $HOME/	.config/syncthing
	# $HOME/Library/Application Support/Syncthing
	# %LOCALAPPDATA%\Syncthing
	# copyOwnershipFromParent: On Unix systems, tries to copy file/folder ownership from the parent directory (the directory itâ€™s located in). Requires running Syncthing as a privileged user, or granting it additional capabilities (e.g. CAP_CHOWN on Linux).
	# user: Set to require authentication.
	# password: Contains the bcrypt hash of the real password.
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup-util-syncthing "$@"
fi
