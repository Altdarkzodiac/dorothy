#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"

# https://github.com/sharkdp/fd
# https://github.com/sharkdp/fd/releases
# find alternative

# fd-v8.3.2-aarch64-unknown-linux-gnu.tar.gz
# fd-v8.3.2-arm-unknown-linux-gnueabihf.tar.gz
# fd-v8.3.2-arm-unknown-linux-musleabihf.tar.gz
# fd-v8.3.2-i686-pc-windows-msvc.zip
# fd-v8.3.2-i686-unknown-linux-gnu.tar.gz
# fd-v8.3.2-i686-unknown-linux-musl.tar.gz
# fd-v8.3.2-x86_64-apple-darwin.tar.gz
# fd-v8.3.2-x86_64-pc-windows-gnu.zip
# fd-v8.3.2-x86_64-pc-windows-msvc.zip
# fd-v8.3.2-x86_64-unknown-linux-gnu.tar.gz
# fd-v8.3.2-x86_64-unknown-linux-musl.tar.g

function setup-util-fd() (
	# determine github args if github is an option on this platform
	local arch github_asset_filter='' github=()
	arch="$(get-arch)"
	if is-mac; then
		github_asset_filter='-x86_64-apple-darwin'
	elif test "$arch" = 'a64'; then
		github_asset_filter='-aarch64-unknown-linux-gnu'
	elif test "$arch" = 'a32'; then
		github_asset_filter='-arm-unknown-linux-musl'
	elif test "$arch" = 'x64'; then
		github_asset_filter='-x86_64-unknown-linux-musl'
	elif test "$arch" = 'x32'; then
		github_asset_filter='-i686-unknown-linux-musl'
	fi
	if test -n "$github_asset_filter"; then
		github+=(
			GITHUB_SLUG='sharkdp/fd'
			GITHUB_RELEASE='latest'
			GITHUB_ASSET_FILTER="$github_asset_filter"
			GITHUB_UNZIP_FILTER='**/fd'
			GITHUB_FILENAME='fd'
		)
	fi

	# install, preferring github
	setup-util "$@" CLI='fd' \
		"${github[@]}" \
		APT='fd-find' \
		APK='fd' \
		BREW='fd' \
		CARGO='fd-find' \
		CHOCO='fd' \
		DNF='fd-find' \
		EMERGE='fd' \
		NIX='fd' \
		NPM='fd-find' \
		PACMAN='fd' \
		PKG='fd-find' \
		PORT='fd' \
		SCOOP='fd' \
		XBPS='fd' \
		ZYPPER='fd' \
		-- github ...
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup-util-fd "$@"
fi
