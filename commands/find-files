#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"

# =====================================
# Arguments

# help
function help() {
	cat <<-EOF >/dev/stderr
		ABOUT:
		Find files within a directory.

		USAGE:
		find-files [--flags...]

		FLAGS:
		Provide [--path=...] to specify which directory should be searched for files.
		Provide [--extension=...] to specify which file extension the files should have.
		Provide [--exec=...] to specify a command to run on each matching file.
	EOF
	if test "$#" -ne 0; then
		echo-style $'\n' --error="ERROR:" $'\n' --red="$(echo-lines -- "$@")" >/dev/stderr
	fi
	return 22 # Invalid argument
}

# options
option_path=''
option_extension=''
option_exec=''
while test "$#" -ne 0; do
	item="$1"
	shift
	case "$item" in
	'help' | '--help' | '-h') help ;;
	'--path='*) option_path="${item:7}" ;;
	'--extension='*) option_extension="${item:12}" ;;
	'--exec='*) option_exec="${item:7}" ;;
	'--'*) help "An unrecognised flag was provided: $item" ;;
	*) help "An unrecognised argument was provided: $item" ;;
	esac
done

# adjust path
if test -z "$option_path"; then
	option_path="$(pwd)"
fi

# =====================================
# Action

# args
args=("$option_path")
if test -n "$option_extension"; then
	# args+=('-path' "**/*.$option_extension")
	args+=('-name' "*.$option_extension")
	# ^^ glob is handled by find, not bash
fi

# act
if test -n "$option_exec"; then
	find "${args[@]}" -exec "$option_exec" {} \;
else
	find "${args[@]}"
fi
