#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"

function help {
	cat <<-EOF >/dev/stderr
		ABOUT:
		Trims empty lines from the start and end of all input received.

		USAGE:
		echo-lines <...input> | echo-trim

		EXAMPLE:

		echo-lines ''  $'\n'  'a'  ' ' 'b'  $'\t' | echo-trim
		echo $'\n\na\n\nb\n\n' | echo-trim

		    a

		    b

	EOF
	if test "$#" -ne 0; then
		echo-error "$@"
	fi
	return 22 # Invalid argument
}

# instead of buffering everything, then filtering off the end
# we can instead have a queue/buffer of empty lines, then flush them when a non-empty line is found
# this allows data to be echoed as it is received
queue=()
started='no'
function on_arg {
	help "echo-trim should receive stdin, not arguments."
}
function on_line {
	if is-empty-string "$1"; then
		if test "$started" = 'yes'; then
			queue+=("$1")
		fi
	else
		started='yes'
		if test "${#queue[@]}" -ne 0; then
			for line in "${queue[@]}"; do
				echo "$line"
			done
			queue=()
		fi
		echo "$1"
	fi
}

source "$DOROTHY/sources/stdinargs.bash"
