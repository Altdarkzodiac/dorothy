#!/usr/bin/env bash

# snap is amd64 only
# flatpak is stale, without access to liveshare dependencies, the `flatpak` executable, the `code` executable

# https://code.visualstudio.com/sha/download?build=stable&os=darwin-universal # zip
# https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64
# https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-arm64
# https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-armhf
# https://code.visualstudio.com/sha/download?build=stable&os=linux-rpm-x64
# https://code.visualstudio.com/sha/download?build=stable&os=linux-rpm-arm64
# https://code.visualstudio.com/sha/download?build=stable&os=linux-rpm-armhf

function setup-util-vscode() (
	source "$DOROTHY/sources/bash.bash"

	# cleanup
	rm -f "$XDG_BIN_HOME/code"

	# check if installer
	if test "${SETUP_UTIL-}" = 'yes'; then

		# determine github args if github is an option on this platform
		if is-mac; then
			down "https://code.visualstudio.com/sha/download?build=stable&os=darwin-universal" \
				--unzip-format="zip" \
				--path="/Applications"
		elif is-linux; then
			local arch deb rpm
			arch="$(get-arch)"
			deb="$(fs-temp --directory='setup-util-vscode' --file='vscode.deb')"
			rpm="$(fs-temp --directory='setup-util-vscode' --file='vscode.rpm')"
			if is-apt; then
				if test "$arch" = 'a64'; then
					down 'https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-arm64' \
						--path="$deb"
				elif test "$arch" = 'a32'; then
					down 'https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-armhf' \
						--path="$deb"
				elif test "$arch" = 'x64'; then
					down 'https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64' \
						--path="$deb"
				else
					return 1
				fi
			elif is-yum; then
				if test "$arch" = 'a64'; then
					down 'https://code.visualstudio.com/sha/download?build=stable&os=linux-rpm-arm64' \
						--path="$rpm"
				elif test "$arch" = 'a32'; then
					down 'https://code.visualstudio.com/sha/download?build=stable&os=linux-rpm-armhf' \
						--path="$rpm"
				elif test "$arch" = 'x64'; then
					down 'https://code.visualstudio.com/sha/download?build=stable&os=linux-rpm-x64' \
						--path="$rpm"
				else
					return 1
				fi
			fi

			if test -f "$deb"; then
				setup-util "$@" --name='Visual Studio Code: deb' \
					DPKG="$deb"
			elif test -f "$rpm"; then
				setup-util "$@" --name='Visual Studio Code: rpm' \
					RPM="$rpm"
			else
				return 1
			fi
		fi

		# custom installer invocation complete
		return 0
	fi

	# dependencies
	if is-linux; then
		# https://docs.microsoft.com/en-us/visualstudio/liveshare/reference/linux#install-linux-prerequisites
		# optional as currently not completely supported on ubuntu 22.04
		# `echo |` to skip the `echo -e "\nPress enter to dismiss this message"; read`
		echo | setup-util "$@" --name='Visual Studio Code: Linux Dependencies' --optional \
			INSTALLER='https://aka.ms/vsls-linux-prereq-script'
	fi

	# install
	setup-util "$@" --name='Visual Studio Code' --cli=code --order='cask aur nix installer snap flatpak ...' \
		INSTALLER="${BASH_SOURCE:-"$0"}" \
		AUR='visual-studio-code-bin' \
		CASK='visual-studio-code' \
		FLATPAK='com.visualstudio.code' \
		NIX='vscode' \
		SNAP='code --classic'

	# ensure `code` is available
	setup-bin
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup-util-vscode "$@"
fi
