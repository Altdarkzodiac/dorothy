#!/usr/bin/env bash

function macos-drive() (
	source "$DOROTHY/sources/strict.bash"
	source "$DOROTHY/sources/arrays.bash"
	requires_array_support 'mapfile'

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Guides you through creating a macOS installation media.

			USAGE:
			macos-drive
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # Invalid argument
	}

	# process
	local item
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) help "An unrecognised argument was provided: $item" ;;
		esac
	done

	# =====================================
	# Action

	# find the installer, and download it if necessary
	function select_installer {
		local installers=() downloaded=''
		if test "${1-}" = '--downloaded'; then
			downloaded='yes'
		fi
		mapfile -t installers < <(expand-path '/Applications/Install macOS*')
		if test "${#installers[@]}" -eq 0; then
			if test "$downloaded" = 'yes'; then
				cat <<-EOF >/dev/stderr
					$(echo-style --error='Even after fetching the installer, we could not find it. This is unexpected.')
					$(echo-style --error='Report an issue at: https://github.com/bevry/dorothy/issues')
				EOF
				return 65 # Package not installed
			fi
			if confirm --positive --ppid=$$ -- \
				'Download the latest macOS installer?' \
				'No macOS installers were detected on your system, so a download will be required to proceed.'; then
				softwareupdate --fetch-full-installer
				# ^ --download flag doesn't work, despite documentation
				select_installer --downloaded # try again
				return "$?"
			else
				return 125 # Operation canceled
			fi
		fi
		# select
		choose-path --required --question="Which macOS installer to use?" -- "${installers[@]}"
	}

	# select the installer
	local installer name volume
	installer="$(select_installer)"
	name="$(basename "$installer")"
	volume="$(
		choose-option --required \
			--question="Install $name to which volume?" \
			-- /Volumes/*
	)"
	if confirm --bool --ppid=$$ -- "Confirm installation of $name to $volume?"; then
		sudo-helper -- "$installer/Contents/Resources/createinstallmedia" --volume "$volume"
		return "$?"
	else
		return 125 # Operation canceled
	fi
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	macos-drive "$@"
fi
