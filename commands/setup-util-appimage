#!/usr/bin/env bash

# https://github.com/probonopd/go-appimage/releases/tag/continuous

# appimaged-715-aarch64.AppImage
# appimaged-715-armhf.AppImage
# appimaged-715-i686.AppImage
# appimaged-715-x86_64.AppImage
# appimagetool-715-aarch64.AppImage
# appimagetool-715-armhf.AppImage
# appimagetool-715-i686.AppImage
# appimagetool-715-x86_64.AppImage
# mkappimage-715-aarch64.AppImage
# mkappimage-715-armhf.AppImage
# mkappimage-715-i686.AppImage
# mkappimage-715-x86_64.AppImage

function setup-util-appimage() (
	source "$DOROTHY/sources/bash.bash"

	# determine github args if github is an option on this platform
	local arch
	arch="$(get-arch)"

	function do_github {
		local bin="$1" args=("${@:2}") github_asset_filter=''
		if test "$arch" = 'a64'; then
			github_asset_filter="^$bin-.*?-aarch64.AppImage$"
		elif test "$arch" = 'a32'; then
			github_asset_filter="^$bin-.*?-armhf.AppImage$"
		elif test "$arch" = 'x64'; then
			github_asset_filter="^$bin-.*?-x86_64.AppImage$"
		elif test "$arch" = 'x32'; then
			github_asset_filter="^$bin-.*?-i686.AppImage$"
		fi
		if test -n "$github_asset_filter"; then
			setup-util "${args[@]}" --cli="$bin" \
				GITHUB_SLUG='probonopd/go-appimage' \
				GITHUB_RELEASE='continuous' \
				GITHUB_ASSET_FILTER="$github_asset_filter" \
				GITHUB_FILENAME="$bin"
		else
			return 1
		fi
	}

	do_github 'appimaged'
	do_github 'appimagetool'
	do_github 'mkappimage'
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup-util-appimage "$@"
fi
