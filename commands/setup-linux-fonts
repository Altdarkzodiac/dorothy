#!/usr/bin/env bash
# shellcheck disable=SC2164,SC1091,SC1090
source "$DOROTHY/sources/strict.bash"
source "$DOROTHY/sources/nullglob.bash"
source "$(which eval-helper)"

function setup-linux-fonts() (
	# =====================================
	# Checks

	# check that an accident has not occured
	if ! is-linux; then
		echo-style --notice="[$0] is only intended to be run on Linux systems, skipping." >/dev/stderr
		return 0
	fi

	# =====================================
	# Dependencies

	# as there are so many fonts, use the best downloader
	setup-util-aria2 --quiet --optional

	# =====================================
	# Action

	# prepare
	local fonts="$HOME/.fonts"
	mkdir -p "$fonts"

	# helpers
	function get_monoid {
		down https://cdn.rawgit.com/larsenwork/monoid/2db2d289f4e61010dd3f44e09918d9bb32fb96fd/Monoid.zip \
			--unzip-filter='*.ttf' \
			--directory="$fonts"
	}
	function get_scp {
		# http://askubuntu.com/a/193073/22776
		# https://github.com/adobe-fonts/source-code-pro
		github-download \
			--slug='adobe-fonts/source-code-pro' \
			--release='latest' \
			--asset-filter='^[OT]TF-' \
			--unzip-filter='*.{otf,ttf}' \
			--directory="$fonts"
	}
	function get_monaco {
		# https://github.com/showcases/fonts
		# https://github.com/todylu/monaco.ttf
		github-download \
			--slug='todylu/monaco.ttf' \
			--ref='master' \
			--pathname='monaco.ttf' \
			--directory="$fonts"
	}
	function get_nerd {
		# https://www.nerdfonts.com/font-downloads
		# https://github.com/ryanoasis/nerd-fonts/releases/tag/v2.1.0
		github-download \
			--slug='ryanoasis/nerd-fonts' \
			--release='latest' \
			--asset-filter='.' \
			--unzip-filter='*.{otf,ttf}' \
			--directory="$fonts"
	}
	function get_fonts {
		echo-segment --h1='Install Fonts'

		eval-helper --no-wrap --quiet \
			--pending="$(echo-style --bold="Installing Monoid...")" \
			--success="$(echo-style --success="Installed Monoid.")" \
			--failure="$(echo-style --error="Failed to install Monoid.")" \
			-- get_monoid

		eval-helper --no-wrap --quiet \
			--pending="$(echo-style --bold="Installing Source Code Pro...")" \
			--success="$(echo-style --success="Installed Source Code Pro.")" \
			--failure="$(echo-style --error="Failed to install Source Code Pro.")" \
			-- get_scp

		eval-helper --no-wrap --quiet \
			--pending="$(echo-style --bold="Installing Monaco...")" \
			--success="$(echo-style --success="Installed Monaco.")" \
			--failure="$(echo-style --error="Failed to install Monaco.")" \
			-- get_monaco

		# this one has multiple, so we want to see details for each one
		eval-helper --no-wrap --no-quiet \
			--pending="$(echo-style --bold="Installing Nerd Fonts...")" \
			--success="$(echo-style --success="Installed Nerd Fonts.")" \
			--failure="$(echo-style --error="Failed to install Nerd Fonts.")" \
			-- get_nerd

		eval-helper --no-wrap --quiet \
			--pending="$(echo-style --bold="Refreshing font cache...")" \
			--success="$(echo-style --success="Refreshed font cache.")" \
			--failure="$(echo-style --error="Failed to refresh font cache.")" \
			-- fc-cache -f -v

		echo-segment --g1='Install Fonts'
	}

	# act
	get_fonts
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup-linux-fonts "$@"
fi
