#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"
source "$DOROTHY/sources/arrays.bash"
requires_array_support 'mapfile'

# https://github.com/bevry/version-compare/blob/76f92ccde39e05a4af147eac293fe6b6743c9b73/source/index.ts
# MIT License - 2020+ Benjamin Lupton <b@lupton.cc> (https://balupton.com)

# help
# =====================================
# Arguments

# help
function help() {
	cat <<-EOF >/dev/stderr
		ABOUT:
		    Compare versions, if <CURRENT> is less <OTHER>

		USAGE:
		   USAGE: version-compare [ --help | -h ] -- <CURRENT> <OTHER>

	EOF
	if test "$#" -ne 0; then
		echo-style $'\n' --error="ERROR:" $'\n' --red="$(echo-lines -- "$@")" >/dev/stderr
	fi
	return 22 # Invalid argument
}

# process
while test "$#" -ne 0; do
	item="$1"
	shift
	case "$item" in
	'--help' | '-h') help ;;
	'--'*) help "An unrecognised flag was provided: $item" ;;
	'--') break ;;
	*) help "An unrecognised argument was provided: $item" ;;
	esac
done

mapfile -t c < <(echo-split '.' -- "$1")
mapfile -t o < <(echo-split '.' -- "$2")

# =====================================
# Act

cl="${#c[@]}"
ol="${#o[@]}"
min="$(get-min "$cl" "$ol")"

for ((depth = 0; "$depth" < "$min"; depth++)); do
	ci="${c[$depth]:-0}"
	oi="${o[$depth]:-0}"
	if test "$ci" -gt "$oi"; then
		echo 1 # greater than
		exit
	fi
	if test "$oi" -gt "$ci"; then
		echo -1 # less than
		exit
	fi
done

echo 0 # equal
