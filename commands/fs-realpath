#!/usr/bin/env bash

function fs-realpath() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Output the absolute (relative paths are expanded) and real (symlinks are resolved) respresentation of a path.

			USAGE:
			fs-realpath [...options] [--] ...<path>

			OPTIONS:
			--raw
			    If the symlink target was a relative path, don't resolve it to an absolute path.

			QUIRKS:
			Use [fs-absolute] if you do not want symlinks resolved.
			Will fail if the symlink does not exist.
			If the symlink is broken (the target does not exist), the target is returned, just as it would if it was successful.
			This behaviour is necessary for the usage of [fs-realpath] in repairing broken symlinks.
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # Invalid argument
	}

	# options
	local item paths=() raw='no'
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--no-raw'* | '--raw'*)
			raw="$(get-flag-value raw --missing="$raw" -- "$item" | echo-affirmative)"
			;;
		'--')
			paths+=("$@")
			shift $#
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) paths+=("$item") ;;
		esac
	done

	# check
	if test "${#paths[@]}" -eq 0; then
		help "No <paths> were provided."
	fi

	# =====================================
	# Action

	# greadlink and realpath are macos coreutils, neither are available on macos without coreutils
	# readlink and realpath are linux coreutils, usually bundled

	# macos readlink:
	# -f fetches the absolutely resolved path

	# greadlink, linux readlink, and realpath:
	# -m, --canonicalize-missing   no path components need exist or be a directory
	# -P, --physical               resolve symlinks as encountered (default)
	# requires [-m] to support broken links

	# fish realpath builtin always returns absolute, and [-s] supports broken links
	# https://gitter.im/fish-shell/fish-shell?at=60e4d29c9cf317173013b830
	# file:///opt/homebrew/Cellar/fish/3.5.1/share/doc/fish/cmds/realpath.html?highlight=realpath
	# not supported in fish v3.1.2
	# supported in fish version v3.3.0
	# exact compatibility unknown
	# if you are using an old version, remove fish and reinstall using [setup-util-fish]

	# as such on macos, must use fish or install coreutils

	function fish_capable {
		ommand-exists fish
		# trunk-ignore(shellcheck/SC2016)
		test "$(version-compare "$(fish -c 'echo $FISH_VERSION')" 3.3.0)" -ge 0
	}

	function resolve_symlink {
		local path="$1"
		if test ! -e "$path" -a ! -L "$path"; then
			# just -e is not sufficient, as broken symlinks will fail -e
			echo-error "$0: Missing: $path"
			return 2 # ENOENT 2 No such file or directory
		elif test ! -L "$path"; then
			echo "$path" # is not a symlink
		elif command-exists greadlink; then
			# macos coreutils
			if test "$raw" = 'yes'; then
				greadlink "$path" # supports broken links, no resolve
			else
				greadlink -m "$path" # supports broken links, resolve
			fi
		elif command-exists readlink; then
			# linux coreutils
			if test "$raw" = 'yes'; then
				readlink "$path" # supports broken links, no resolve
			else
				readlink -m "$path" # supports broken links, resolve
			fi
		elif command-exists realpath; then
			# macos coreutils, linux coreutils
			if test "$raw" = 'yes'; then
				realpath "$path" # supports broken links, no resolve
			else
				realpath -m "$path" # supports broken links, resolve
			fi
		elif fish_capable; then
			# fish builtin
			# trunk-ignore(shellcheck/SC2016)
			fish -c 'realpath -s "$argv[1]"' -- "$path"
		elif command-exists readlink; then
			if test "$raw" = 'yes'; then
				readlink "$path" # supports broken links, no resolve
			else
				readlink -f "$path" # DOES NOT SUPPORT broken links, resolve
				# don't do the coreutils fallback here, as if we are here, we are too early in the dorothy setup
			fi
		else
			setup-util-coreutils --quiet
			resolve_symlink "$path"
		fi
	}

	local path
	for path in "${paths[@]}"; do
		resolve_symlink "$path"
	done
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	fs-realpath "$@"
fi
