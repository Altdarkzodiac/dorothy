#!/usr/bin/env bash

# https://github.com/bootandy/dust
# https://github.com/bootandy/dust/releases
# du alternative

# dust-v0.8.1-alpha.2-aarch64-unknown-linux-gnu.tar.gz
# dust-v0.8.1-alpha.2-aarch64-unknown-linux-musl.tar.gz
# dust-v0.8.1-alpha.2-arm-unknown-linux-gnueabihf.tar.gz
# dust-v0.8.1-alpha.2-i686-pc-windows-gnu.zip
# dust-v0.8.1-alpha.2-i686-pc-windows-msvc.zip
# dust-v0.8.1-alpha.2-i686-unknown-linux-gnu.tar.gz
# dust-v0.8.1-alpha.2-i686-unknown-linux-musl.tar.gz
# dust-v0.8.1-alpha.2-x86_64-apple-darwin.tar.gz
# dust-v0.8.1-alpha.2-x86_64-pc-windows-gnu.zip
# dust-v0.8.1-alpha.2-x86_64-pc-windows-msvc.zip
# dust-v0.8.1-alpha.2-x86_64-unknown-linux-gnu.tar.gz
# dust-v0.8.1-alpha.2-x86_64-unknown-linux-musl.tar.gz

function setup-util-dust() (
	source "$DOROTHY/sources/strict.bash"

	# determine github args if github is an option on this platform
	local arch github_asset_filter='' github=()
	arch="$(get-arch)"
	if is-mac; then
		github_asset_filter='x86_64-apple-darwin'
	elif test "$arch" = 'a64'; then
		github_asset_filter='-aarch64-unknown-linux-musl'
	elif test "$arch" = 'a32'; then
		github_asset_filter='-arm-unknown-linux-musl'
	elif test "$arch" = 'x64'; then
		github_asset_filter='-x86_64-unknown-linux-musl'
	elif test "$arch" = 'x32'; then
		github_asset_filter='-i686-unknown-linux-musl'
	fi
	if test -n "$github_asset_filter"; then
		github+=(
			GITHUB_SLUG='bootandy/dust'
			GITHUB_RELEASE='latest'
			GITHUB_ASSET_FILTER="$github_asset_filter"
			GITHUB_UNZIP_FILTER='**/dust'
			GITHUB_FILENAME='dust'
		)
	fi

	# install, preferring github
	setup-util "$@" --cli='dust' --order='github ...' \
		"${github[@]}" \
		BREW='dust' \
		CARGO='du-dust'
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup-util-dust "$@"
fi
