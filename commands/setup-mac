#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"
source "$DOROTHY/sources/shims.bash"

function setup-mac() (
	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Configure macOS to our expectations.

			USAGE:
			setup-mac <install|update>
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # Invalid argument
	}

	# process
	local item action=''
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*)
			if test -z "$action"; then
				action="$item"
			else
				help "An unrecognised argument was provided: $item"
			fi
			;;
		esac
	done

	# assert operating system
	if ! is-mac; then
		help "This command is only purposeful on macOS, which you are not running."
	fi

	# assert action
	if test -z "$action"; then
		help "No action provided."
	fi

	# generate log title
	local title
	title="$(ucf "$action") macOS"

	# =====================================
	# Action

	# log
	echo-segment --h1="$title"

	# xcode
	if get-app --quiet 'Xcode' || get-app --quiet 'Xcode-beta'; then
		eval-helper --quiet --no-wrap \
			--pending="$(echo-style --bold="Accepting Xcode license...")" \
			--success="$(echo-style --success="Accepted Xcode license.")" \
			--failure="$(echo-style --error="Failed to Accept Xcode license.")" \
			-- sudo xcodebuild -license accept
	fi

	# mac
	setup-mac-brew "$action"                 # setup-util-devel done as part of this
	source "$DOROTHY/sources/environment.sh" # ensure the updated bash is available to what comes after
	if test "$action" = 'install'; then
		setup-mac-apps
	fi

	# cross-platform
	setup-extras "$action"

	# cleanup
	setup-mac-clean

	# restore
	if test "$action" = 'install'; then
		echo
		echo-segment --h2="Configure macOS"
		if confirm-bool --ppid=$$ -- "Would you like to also restore from backup?"; then
			macos-state restore
		fi
		echo
		if confirm-bool --ppid=$$ -- "Would you like to also configure macOS settings?"; then
			macos-settings
		fi
		echo
		echo-segment --g2="Configure macOS"
	fi

	# log
	echo-segment --g1="$title"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup-mac "$@"
fi
