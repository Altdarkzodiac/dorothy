#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"
source "$DOROTHY/sources/nullglob.bash"
source "$DOROTHY/sources/globstar.bash"

function setup-util-gocryptfs() (
	# --paths
	if test "${1-}" = '--paths'; then
		echo '/etc/fuse.conf'
		return 0
	fi

	# ensure this command is run via [setup-util]
	# for consistent detection, quiet/vebose, force mode, optional mode, etc
	if test -z "${SETUP_UTIL-}"; then
		setup-util "$@" CLI='gocryptfs' INSTALLER="${BASH_SOURCE:-"$0"}"
		return "$?"
	fi

	# download the release
	# https://github.com/rfjakob/gocryptfs/releases
	local temp_directory
	temp_directory="$(
		fs-temp \
			--directory='setup-util-gocryptfs' \
			--directory
	)"
	github-download \
		--slug='rfjakob/gocryptfs' \
		--release='latest' \
		--asset-filter='_src-deps.tar.gz' \
		--unzip-format='tar' \
		--directory="$temp_directory"

	# build from source
	chmod +x "$temp_directory/"**"/build.bash"
	# trunk-ignore(shellcheck/SC2211)
	("$temp_directory/"**"/build.bash")
	# this creates the executable locally, and also inside "$GOPATH1/bin"

	# make available to sudo, which is necessary for gocryptfs mounts
	sudo mkdir -p '/usr/local/bin'
	sudo cp -fv "$temp_directory/"**"/gocryptfs" '/usr/local/bin/gocryptfs'
	sudo chmod +x '/usr/local/bin/gocryptfs'
	# XDG is not available to sudo, so don't do XDG
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup-util-gocryptfs "$@"
fi
