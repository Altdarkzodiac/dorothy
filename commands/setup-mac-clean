#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"

function setup-mac-clean() (
	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Remove various caches throughout a macOS developer environment.

			USAGE:
			setup-mac-clean
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # Invalid argument
	}

	# process
	local item
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) help "An unrecognised argument was provided: $item" ;;
		esac
	done

	# assert operating system
	if ! is-mac; then
		help "This command is only purposeful on macOS, which you are not running."
	fi

	# =====================================
	# Action

	# prepare
	local caches=(
		"$HOME/Library/Application Support/Plex Media Server/Updates"
		"$HOME/Library/Application Support/Spotify/PersistentCache/Update"
		"$XDG_CACHE_HOME"
	)
	local essentials=(
		"$XDG_CACHE_HOME"
		# gems, @todo is this still necessary?
		"$XDG_CACHE_HOME/gems"
		# pip, @todo is this still necessary?
		"$XDG_CACHE_HOME/pip/http"
		"$HOME/Library/Caches/pip/http"
	)

	# log
	echo-segment --h1='Clean macOS'

	# Clean brew
	setup-mac-brew clean

	# Clean caches
	echo-segment --h2='Cleaning caches'
	rm -Rf "${caches[@]}"
	mkdir -p "${essentials[@]}"
	echo-segment --g2='Cleaned caches'

	# npm
	if command-exists npm; then
		{
			echo-segment --h2='Cleaning npm caches'
			source "$DOROTHY/sources/nvm.sh"
			{
				# use `|| :`` as nvm is a function
				nvm use node || :
				npm cache clean --force || :
				nvm use system || :
				npm cache clean --force || :
				nvm use default || :
				npm cache clean --force || :
			} &>/dev/null
			echo-segment --g2='Cleaned npm caches'
		} || {
			echo-segment --e2='Cleaned npm caches'
		}
	fi

	# done
	echo-segment --g1='Clean macOS'
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup-mac-clean "$@"
fi
