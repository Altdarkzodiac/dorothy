#!/usr/bin/env bash

function command-missing() (
	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Returns success exit code if the command is not available.

			USAGE:
			command-exists <command>
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # Invalid argument
	}

	# process
	local item command=''
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*)
			if test -z "$command"; then
				command="$item"
			else
				help "An unrecognised argument was provided: $item"
			fi
			;;
		esac
	done

	# check
	if test -z "$command"; then
		help 'No <command> was provided.'
	fi

	# =====================================
	# Action

	# -P  force a PATH search for each NAME, even if it is an alias,
	#     builtin, or function, and returns the name of the disk file
	#     that would be executed
	if type -P "$command" &>/dev/null; then
		return 1 # exists
	else
		return # missing
	fi
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	command-missing "$@"
fi
