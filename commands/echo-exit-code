#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"

# =====================================
# Arguments

# help
function help() {
	cat <<-EOF >/dev/stderr
		ABOUT:
		Given a command as arguments, execute it, output the exit code.

		USAGE:
		echo-exit-affirmative [--] <command...>

		EXAMPLES:
		echo-exit-affirmative -- exit 0    # outputs: 0    exit code: 0
		echo-exit-affirmative -- exit 1    # outputs: 1    exit code: 0
		echo-exit-affirmative -- exit 2    # outputs: 2    exit code: 0
	EOF
	if test "$#" -ne 0; then
		echo-style $'\n' --error="ERROR:" $'\n' --red="$(echo-lines -- "$@")" >/dev/stderr
	fi
	return 22 # Invalid argument
}

# process
option_cmd=()
while test "$#" -ne 0; do
	item="$1"
	shift
	case "$item" in
	'help' | '--help' | '-h') help ;;
	'--')
		option_cmd+=("$@")
		shift "$#"
		break
		;;
	*) option_cmd+=("$item") ;;
	esac
done

# check
if test "${#option_cmd[@]}" -eq 0; then
	help "No command was provided."
fi

# =====================================
# Action

function echo_exit_code {
	local ec
	ec=0 && ("$@") || ec="$?"
	echo "$ec"
}

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	echo_exit_code "${option_cmd[@]}"
fi
