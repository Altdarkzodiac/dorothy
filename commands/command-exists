#!/usr/bin/env bash

function command-exists() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Returns success exit code if all <command>s are available.

			USAGE:
			command-exists [--] ...<command>
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # Invalid argument
	}

	# process
	local item commands=()
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--')
			commands+=("$@")
			shift "$#"
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) commands+=("$item") ;;
		esac
	done

	# check
	if test "${#commands[@]}" -eq 0; then
		echo-style --error="No <command> was provided. See [$0 --help] for usage."
		return 22 # EINVAL 22 Invalid argument
	fi

	# =====================================
	# Action

	# fish shell:
	# type --quiet "$command"

	# bourne inspired shells:
	# -P  force a PATH search for each NAME, even if it is an alias,
	#     builtin, or function, and returns the name of the disk file
	#     that would be executed

	local command
	for command in "${commands[@]}"; do
		if type -P "$command" &>/dev/null; then
			continue
		else
			return 1 # command missing
		fi
	done
	return 0 # all commands are present
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	command-exists "$@"
fi
