#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"

function setup-util-xcode() (
	# check for compatibility
	if ! is-mac; then
		echo-style --notice="[$0] is only intended to be run on macOS systems, skipping." >/dev/stderr
		return 0
	fi

	# rosetta
	if is-apple-silicon && test ! -f /Library/Apple/usr/share/rosetta/rosetta; then
		sudo-helper -- softwareupdate --install-rosetta --agree-to-license
	fi

	# xcode cli tools
	while true; do
		if ! xcode-select --install &>/dev/null; then
			break
		else
			echo 'Press any key once the Apple Command Line Tools have been installed...'
			read -rn 0
		fi
	done

	# check if xcode exists
	local xcode xcodebuild xcodesdk
	xcode="$(get-app 'Xcode' || get-app 'Xcode-beta' || :)"
	xcodebuild="$xcode/Contents/Developer/usr/bin/xcodebuild"
	xcodesdk="$xcode/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk"

	# xcode cli tools license
	function xcode_license_accepted {
		# https://stackoverflow.com/a/60906147/130638
		local xcode_version accepted_license_version
		xcode_version="$("$xcodebuild" -version | grep '^Xcode\s' | sed -E 's/^Xcode[[:space:]]+([0-9\.]+)/\1/' || :)"
		accepted_license_version="$(defaults read /Library/Preferences/com.apple.dt.Xcode 2>/dev/null | grep IDEXcodeVersionForAgreedToGMLicense | cut -d '"' -f 2 || :)"
		test "$xcode_version" = "$accepted_license_version"
	}
	if test -x "$xcodebuild" && ! xcode_license_accepted; then
		eval-helper --quiet --wrap \
			--pending="$(echo-style --bold="Accepting Xcode license...")" \
			--success="$(echo-style --success="Accepted Xcode license.")" \
			--failure="$(echo-style --error="Failed to accept Xcode license.")" \
			-- sudo-helper \
			-- "$xcodebuild" -license accept
	fi

	# confirm xcode exists
	if test -z "$xcode"; then
		if command-missing mas || ! setup-util --name='Xcode' MAS='497799835'; then
			echo-style --notice='Xcode requires manual installation...'
			open 'https://apps.apple.com/us/app/xcode/id497799835'
			echo 'Press any key once Xcode has been installed...'
			read -rn 0
		fi
	fi

	# confirm it all works
	if ! "$xcodebuild" -sdk "$xcodesdk" -find clang &>/dev/null; then
		echo-style --notice="Xcode SDKs require manual installation, opening Xcode..."
		open "$xcode"
		echo 'Press any key once Xcode components have been installed...'
		read -rn 0
	fi
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup-util-xcode "$@"
fi
