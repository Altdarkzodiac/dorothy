#!/usr/bin/env bash

# https://github.com/sharkdp/bat
# https://github.com/sharkdp/bat/releases
# cat alternative

# bat-v0.20.0-aarch64-unknown-linux-gnu.tar.gz
# bat-v0.20.0-arm-unknown-linux-gnueabihf.tar.gz
# bat-v0.20.0-arm-unknown-linux-musleabihf.tar.gz
# bat-v0.20.0-i686-pc-windows-msvc.zip
# bat-v0.20.0-i686-unknown-linux-gnu.tar.gz
# bat-v0.20.0-i686-unknown-linux-musl.tar.gz
# bat-v0.20.0-x86_64-apple-darwin.tar.gz
# bat-v0.20.0-x86_64-pc-windows-gnu.zip
# bat-v0.20.0-x86_64-pc-windows-msvc.zip
# bat-v0.20.0-x86_64-unknown-linux-gnu.tar.gz
# bat-v0.20.0-x86_64-unknown-linux-musl.tar.gz

function setup-util-bat() (
	source "$DOROTHY/sources/strict.bash"

	# determine github args if github is an option on this platform
	local arch github_asset_filter='' github=()
	arch="$(get-arch)"
	if is-mac; then
		github_asset_filter='-x86_64-apple-darwin'
	elif test "$arch" = 'a64'; then
		github_asset_filter='-aarch64-unknown-linux-gnu'
	elif test "$arch" = 'a32'; then
		github_asset_filter='-arm-unknown-linux-musl'
	elif test "$arch" = 'x64'; then
		github_asset_filter='-x86_64-unknown-linux-musl'
	elif test "$arch" = 'x32'; then
		github_asset_filter='-i686-unknown-linux-musl'
	fi
	if test -n "$github_asset_filter"; then
		github+=(
			GITHUB_SLUG='sharkdp/bat'
			GITHUB_RELEASE='latest'
			GITHUB_ASSET_FILTER="$github_asset_filter"
			GITHUB_UNZIP_FILTER='**/bat'
			GITHUB_FILENAME='bat'
		)
	fi

	# install, preferring github
	# despite docs, no apk
	setup-util "$@" --cli='bat' --order='github ...' \
		"${github[@]}" \
		APT='bat' \
		AUR='bat' \
		BREW='bat' \
		BSD='bat' \
		CARGO='bat' \
		CHOCO='bat' \
		NIX='bat' \
		PORT='bat' \
		RPM='bat' \
		SCOOP='bat' \
		XBPS='bat' \
		ZYPPER='bat'
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup-util-bat "$@"
fi
