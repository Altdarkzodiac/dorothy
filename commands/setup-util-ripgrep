#!/usr/bin/env bash

# https://github.com/BurntSushi/ripgrep
# https://github.com/BurntSushi/ripgrep/releases
# https://github.com/BurntSushi/ripgrep/issues/1094
# https://github.com/microsoft/ripgrep-prebuilt/releases
# grep alternative

# ripgrep-v13.0.0-4-aarch64-apple-darwin.tar.gz
# ripgrep-v13.0.0-4-aarch64-pc-windows-msvc.zip
# ripgrep-v13.0.0-4-aarch64-unknown-linux-gnu.tar.gz
# ripgrep-v13.0.0-4-aarch64-unknown-linux-musl.tar.gz
# ripgrep-v13.0.0-4-arm-unknown-linux-gnueabihf.tar.gz
# ripgrep-v13.0.0-4-i686-pc-windows-msvc.zip
# ripgrep-v13.0.0-4-i686-unknown-linux-musl.tar.gz
# ripgrep-v13.0.0-4-powerpc64le-unknown-linux-gnu.tar.gz
# ripgrep-v13.0.0-4-s390x-unknown-linux-gnu.tar.gz
# ripgrep-v13.0.0-4-x86_64-apple-darwin.tar.gz
# ripgrep-v13.0.0-4-x86_64-pc-windows-msvc.zip
# ripgrep-v13.0.0-4-x86_64-unknown-linux-musl.tar.gz

function setup-util-ripgrep() (
	source "$DOROTHY/sources/strict.bash"

	# determine github args if github is an option on this platform
	local arch github_asset_filter='' github=()
	arch="$(get-arch)"
	if is-mac; then
		if test "$arch" = 'a64'; then
			github_asset_filter='aarch64-apple-darwin'
		elif test "$arch" = 'x64'; then
			github_asset_filter='x86_64-apple-darwin'
		fi
	elif test "$arch" = 'a64'; then
		github_asset_filter='aarch64-unknown-linux-musl'
	elif test "$arch" = 'a32'; then
		github_asset_filter='arm-unknown-linux-gnu'
	elif test "$arch" = 'x64'; then
		github_asset_filter='x86_64-unknown-linux-musl'
	elif test "$arch" = 'x32'; then
		github_asset_filter='i686-unknown-linux-musl'
	fi
	if test -n "$github_asset_filter"; then
		github+=(
			GITHUB_SLUG='microsoft/ripgrep-prebuilt'
			GITHUB_RELEASE='latest'
			GITHUB_ASSET_FILTER="$github_asset_filter"
			GITHUB_UNZIP_FILTER='**/rg'
			GITHUB_FILENAME='rg'
		)
	fi

	# install, preferring github
	setup-util "$@" --name='ripgrep' --cli='rg' --order='github ...' \
		"${github[@]}" \
		APT='ripgrep' \
		AUR='ripgrep' \
		BREW='ripgrep' \
		BSD='ripgrep' \
		CARGO='ripgrep' \
		CHOCO='ripgrep' \
		EMERGE='sys-apps/ripgrep' \
		NIX='ripgrep' \
		PORT='ripgrep' \
		RPM='ripgrep' \
		SCOOP='ripgrep' \
		ZYPPER='ripgrep'
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup-util-ripgrep "$@"
fi
