#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"

# @todo: investigate macOS support.

# https://www.tecmint.com/set-hostname-permanently-in-linux/

function update_hostname {
	local new_hostname="$1" old_hostname
	old_hostname="$(get-hostname)"

	# apply the hostname
	if command-exists setup-hostname; then
		# https://wiki.alpinelinux.org/wiki/Alpine_setup_scripts#setup-hostname
		setup-hostname -n "$new_hostname"
	elif command-exists 'hostname'; then
		sudo hostname "$1"
	elif command-exists 'hostnamectl'; then
		sudo hostnamectl set-hostname "$new_hostname"
	elif test -f '/etc/hostname'; then
		echo "$new_hostname" | sudo tee -a /etc/hostname
	elif test -f '/proc/sys/kernel/hostname'; then
		echo "$new_hostname" | sudo tee -a /proc/sys/kernel/hostname
	elif command-exists 'sysctl'; then
		sudo sysctl kernel.hostname="$new_hostname"
	else
		return 19 # ENODEV 19 Operation not supported by device
	fi

	# write the hostname to the /etc/hosts file, this was necessary for a forgotten reason
	# instead of two --expression, can also do -e 's//; s//'
	# don't use sd, as this runs in initial setup
	sudo sed --null-data --in-place --regexp-extended \
		--expression="s#127.0.0.1\s+(${old_hostname}|${new_hostname})\n##g" \
		--expression="s#(\s+)localhost\n#\1localhost\n127.0.0.1\1${new_hostname}\n#" \
		/etc/hosts
	# cat /etc/hosts

	# restart the name server
	if command-exists systemctl; then
		sudo systemctl restart nmbd
	elif test -x /etc/init.d/hostname; then
		/etc/init.d/hostname restart
	elif test -f /etc/sysconfig/network; then
		sudo-inherit config-helper --file='/etc/sysconfig/network' -- \
			--field='HOSTNAME' --no-quote --value="$new_hostname"
	else
		return 19 # ENODEV 19 Operation not supported by device
	fi
}

update_hostname "$1"
