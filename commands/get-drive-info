#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"

# https://unix.stackexchange.com/a/364496/50703
# https://unix.stackexchange.com/a/364458/50703
# https://en.wikipedia.org/wiki/Smartmontools
# https://help.ubuntu.com/community/Smartmontools

# These support UASP:
# Seagate Expansion Desktop Drive (STEB4000300)

# These do not support UASP:
# Western Digital My Book 12TB (WDBBGB0120HBK-NA,WDBBGB0120HBK-NB)

# What is UASP
# https://youtu.be/t0kYcM1E5fY
# https://www.startech.com/en-us/blog/all-you-need-to-know-about-uasp
# Despite what Pluggable states: https://support.plugable.com/t/6491/2?u=balupton
# UASP supported is needed by the USB Hubs for UASP boost, as stated by StarTech in a support chat:
# > All hubs support the use of UASP enabled devices, but hubs that do not have the feature built in will not operate at the boosted speed that UASP devices can function at. If you require the UASP boosted speed, then look for a hub that has it built in. If the speed is not crucial and the standard 5Gbps that USB 3.0 offers will suffice, it won't matter the hub you use as long as its a USB 3.0 hub.

# =====================================
# Arguments

# help
function help() {
	cat <<-EOF >/dev/stderr
		ABOUT:
		Fetch as much details about the connected drives as possible.

		USAGE:
		get-drive-info
		# ^ gets details on all drives

		get-drive-info [--] ...<drive>
		# ^ gets details on the specific drive
	EOF
	if test "$#" -ne 0; then
		echo-style $'\n' --error="ERROR:" $'\n' --red="$(echo-lines -- "$@")" >/dev/stderr
	fi
	return 22 # Invalid argument
}

# process
option_drives=()
while test "$#" -ne 0; do
	item="$1"
	shift
	case "$item" in
	'help' | '--help' | '-h') help ;;
	'--')
		option_drives+=("$@")
		shift "$#"
		break
		;;
	'--'*) help "An unrecognised flag was provided: $item" ;;
	*) option_drives+=("$item") ;;
	esac
done

# =====================================
# Dependencies

env QUIET=yes setup-util-drive-info

# =====================================
# Action

if test "${#option_drives[@]}" -eq 0; then
	# fetch details for all drives
	if is-linux; then
		echo-eval -- sudo fdisk -l || :
		# ^ mac does not support the -l flag

		echo-eval -- sudo lshw -class disk -class storage || :
		# ^ Gets all the details for the drives, including the vendor, model, serial, driver capabilities, etc.
		# UASP unsupported: configuration: driver=usb-storage
		# UASP supported: configuration: driver=uas maxpower=... speed=...

		echo-eval -- sudo lsusb -t || :
		# ^ Gets minimal driver (UASP) details: https://superuser.com/a/930884/32418
		# UASP unsupported: Driver=usb-storage
		# UASP supported: Driver=uas

		# fetch filesystems and mounts for all drives
		echo-eval -- sudo lsblk -f || :
	elif is-mac; then
		echo-eval -- sudo diskutil list || :
	else
		echo-style --error="ERROR: Unsupported OS" >/dev/stderr
		exit 19 # ENODEV 19 Operation not supported by device
	fi
else
	# fetch specific drive details
	for drive in "${option_drives[@]}"; do
		if is-linux; then
			echo-eval -- sudo hdparm -I "$drive" || :
			echo-eval -- sudo sginfo -a "$drive" || : # includes serial
			echo-eval -- sudo sdparm -i "$drive" || :
			echo-eval -- sudo blkid "$drive" || : # includes filesystem label and type
		elif is-mac; then
			echo-eval -- diskutil info "$drive" || :
			# ^ generic info, size, device, etc.
		else
			echo-style --error="ERROR: Unsupported OS" >/dev/stderr
			exit 19 # ENODEV 19 Operation not supported by device
		fi
		if command-exists smartctl; then
			echo-eval -- sudo smartctl -i "$drive" || :
			# ^ -i: model, serial, firmware, pci id, ieee id, controller id, nvme version, etc.
			# ^ -a: same as -i, but includes SMART specific details that we don't care for
		fi
	done
fi
