#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"

# =====================================
# Arguments

# help
function help() {
	cat <<-EOF >/dev/stderr
		ABOUT:
		Concatenate multiple video files into a single video, without having to transcode.
		Wrapper around the builtin ffmpeg functionality:
		https://trac.ffmpeg.org/wiki/Concatenate

		USAGE:
		video-merge [<output>] -- ...<input>

		EXAMPLE:
		video-merge 'result.m4v' -- 'input1.m4v' 'input2.m4v'

		QUIRKS:
		If <output> is not provided, the basename of the current directory will be used.
	EOF
	if test "$#" -ne 0; then
		echo-style $'\n' --error="ERROR:" $'\n' --red="$(echo-lines -- "$@")" >/dev/stderr
	fi
	return 22 # Invalid argument
}

# process
option_inputs=()
option_output=''
while test "$#" -ne 0; do
	item="$1"
	shift
	case "$item" in
	'help' | '--help' | '-h') help ;;
	'--output='*) option_output="${item:9}" ;;
	'--')
		option_inputs+=("$@")
		shift "$#"
		break
		;;
	'--'*) help "An unrecognised flag was provided: $item" ;;
	*)
		if test -z "$option_output"; then
			option_output="$item"
		else
			help "An unrecognised argument was provided: $item"
		fi
		;;
	esac
done

# check inputs and write list of absolute existing paths
list="$(fs-temp --prefix='video-merge' --suffix='.txt')"
extension=''
for input in "${option_inputs[@]}"; do
	if test ! -f "$input"; then
		help "The input file does not exist: $input"
	else
		if test -z "$extension"; then
			extension="$(fs-extension "$input")"
		fi
		fs-absolute "$input" >>"$list"
	fi
done

# check output
if test -z "$option_output"; then
	option_output="$(basename "$(pwd)").$extension"
fi

# =====================================
# Action

echo-eval -- ffmpeg -f concat -safe 0 -i "$list" -c copy "$option_output"
