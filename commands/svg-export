#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"

# =====================================
# Arguments

# help
function help() {
	cat <<-EOF >/dev/stderr
	ABOUT:

    USAGE:

	EOF
	if test "$#" -ne 0; then
		echo-style $'\n' --error="ERROR:" $'\n' --red="$(echo-lines -- "$@")" >/dev/stderr
	fi
	return 22 # Invalid argument
}

# process
local args=()
while test "$#" -ne 0; do
	item="$1"
	shift
	case "$item" in
	    'help' | '--help' | '-h') help ;;
	    '--'*) help "An unrecognised flag was provided: $item" ;;
	    *) args+=( "$item" ) ;;
	esac
done

	# *)
	# 	if test -z "$item"; then
	# 		help "Empty path argument provided."
	# 	elif test -z "$option_source"; then
	# 		option_source="$item"
	# 	elif test -z "$option_destination"; then
	# 		option_destination="$item"
	# 	else
	# 		help "An unrecognised argument was provided: $item"
	# 	fi
	# 	;;
    # =====================================
    # Act

    scale=3
    dpi=1200

    function convert {
	    local svg png

	    svg="$1"
	    png="$(fs-filename "$svg").png" # [scale=$scale] [dpi=$dpi].png"

	    echo "$svg to $png"

	    cairosvg --format "png" --scale "$scale" --dpi "$dpi" --output "$png" "$svg"

	# svg2png doesn't work well
	# https://github.com/domenic/svg2png
	# svg2png --scale="$scale" "$svg" "$png"
}

if test "$#" -eq 0; then
	# convert all svg files
	find-files --extension=svg | while read -r file; do convert "$file"; done
else
	# convert a specific set of file(s)
	for file in "${args[@]}"; do
	    convert "$file"
    done

fi
