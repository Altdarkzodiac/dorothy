#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"

function svg-export() (
	local formats=(
		png
		pdf
		svg
		eps
		ps
	)

	# =====================================
	# Arguments

	# help
	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Convert SVGs into PNGs.

			USAGE:
			svg-export [...options] -- <..inputs>

			OPTIONS:
			--dpi=<dpi>
			    Set the display pixels per inch, e.g. [150].

			--scale=<scale>
			    Set the scale factor, e.g. [2] for 2x.

			--background=<background-color>
			    Set the background color, defaults to [white].
			    To keep transparency, use [--background=].

			--format=$(
				echo-join '|' -- "${formats[@]}"
			)]

			EXAMPLE:
			svg-export -- *.svg
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # Invalid argument
	}

	# process
	local item files=() dpi='' scale='' background='white' format=''
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--dpi='*) dpi="${item:6}" ;;
		'--scale='*) scale="${item:8}" ;;
		'--bg='*) background="${item:5}" ;;
		'--background='*) background="${item:13}" ;;
		'--format='*) format="${item:9}" ;;
		'--')
			files+=("$@")
			shift $#
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) help "An unrecognised argument was provided: $item" ;;
		esac
	done

	# if no files, fail
	if test "${#files[@]}" -eq 0; then
		help "No files were provided."
	fi

	# ensure correct format
	format="$(
		choose-option --required \
			--question='Which format to export to?' \
			--filter="$format" -- "${formats[@]}"
	)"

	# =====================================
	# Dependencies

	# https://github.com/sharkdp/bat
	# cat alternative

	env CLI='cairosvg' \
		PIP='cairosvg' \
		setup-util pip

	# =====================================
	# Act

	# adjustments
	local suffix='' args=(
		--format "$format"
	)
	if test -n "$scale"; then
		suffix+=" [scale=$scale]"
		args+=(--scale "$scale")
	fi
	if test -n "$dpi"; then
		suffix+=" [dpi=$dpi]"
		args+=(--dpi "$dpi")
	fi
	if test -n "$background"; then
		suffix+=" [bg=$background]"
		args+=(--background "$background")
	fi
	suffix+=".$format"

	# convert
	local input output
	for input in "${files[@]}"; do
		output="$(fs-filename "$input")$suffix"

		eval-helper --quiet \
			--pending="$(echo-style --bold="Converting " --code="$input" --bold=" to " --code="$output")" \
			--success="$(echo-style --bold+green="Converted " --code="$input" --bold=" to " --code="$output")" \
			--failure="$(echo-style --bold+red="Failed to convert " --code="$input" --bold=" to " --code="$output")" \
			-- cairosvg "${args[@]}" --output "$output" "$input" || :

		# svg2png doesn't work well
		# https://github.com/domenic/svg2png
		# svg2png --scale="$scale" "$input" "$output"
	done
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	svg-export "$@"
fi
