#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"

# prepare
dirs=(
	"$HOME/Applications"
	"/Applications"
	"/Applications/Setapp"
)

# =====================================
# Arguments

# help
function help() {
	cat <<-EOF >/dev/stderr
		ABOUT:
		Get the full path of a GUI application.

		USAGE:
		get-app [--quiet] <app path or name>

		QUIRKS:
		Searches the following paths for the application:
		$(echo-lines -- "${dirs[@]}")
	EOF
	if test "$#" -ne 0; then
		echo-style $'\n' --error="ERROR:" $'\n' --red="$(echo-lines -- "$@")" >/dev/stderr
	fi
	return 22 # Invalid argument
}

# process
option_name=''
option_quiet="$(echo-quiet --missing="no" -- "$@")"
while test "$#" -ne 0; do
	item="$1"
	shift
	case "$item" in
	'help' | '--help' | '-h') help ;;
	'--name='*) option_name="${item:7}" ;;
	'--no-quiet'* | '--quiet'* | '--no-verbose'* | '--verbose'*)
		option_quiet="$(
			echo-quiet --missing="$option_quiet" -- "$item"
		)"
		;;
	'--'*) help "An unrecognised flag was provided: $item" ;;
	*)
		if test -z "$option_name"; then
			option_name="$item"
		else
			help "An unrecognised argument was provided: $item"
		fi
		;;
	esac
done

# =====================================
# Act

# ensure the name has .app appended
appname="${option_name%.app}.app"

# iterate through a few options
for dir in "${dirs[@]}"; do
	path="$dir/$appname"
	if test -d "$path"; then
		if test "$option_quiet" = 'no'; then
			echo "$path"
		fi
		exit 0
	fi
done

# wasn't found
exit 1
