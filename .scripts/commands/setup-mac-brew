#!/usr/bin/env bash

set -e

if command_exists brew; then
	echo -e "\nHomebrew is already installed, great"
elif is_dir "$HOME/.homebrew"; then
	echo -e "\nHomebrew is installed but not yet in path, reload your terminal"
	exit 1
else
	# https://github.com/Homebrew/brew/blob/master/docs/Installation.md#untar-anywhere
	echo -e "\nInstalling homebrew locally..."
	mkdir -p "$HOME/.homebrew"
	curl -L https://github.com/Homebrew/brew/tarball/master | tar xz --strip 1 -C "$HOME/.homebrew"
	echo -e "\nHomebrew is now installed, open a new terminal so it is added to your path, and run the command again"
	exit 1
fi

echo -e "\nInitialising homebrew cask..."
brew tap caskroom/cask
brew tap caskroom/fonts

echo -e "\nUpdating homebrew..."
brew update
brew upgrade
brew cleanup
brew cask cleanup

echo -e "\nInstalling command line applications via homebrew..."
brew install aria2 bash bash-completion heroku hub fish git git-extras gpg python mas micro rmtrash ruby shellcheck tmux tree wget watchman vim
# as needed
# brew install zsh

function caskinstall {
	for ARG in "$@"; do
		if confirm "Do you want to install the desktop application: $ARG"; then
			brew cask install "$ARG"
		fi
	done
}

echo; if confirm "Do you want to be presented with Homebrew Cask apps to install?"; then
	caskinstall appzapper bartender devdocs firefox github-desktop kodi plex-media-server screenflow skype spotify teamviewer tower transmission visual-studio-code vlc
	# as needed
	# brew cask install airparrot atom burn brave calibre caption contexts ccleaner freedom geekbench jaikoz opera pomello toggldesktop spotifree reflector sketch torbrowser tunnelbear typora usage vmware-fusion windscribe xld
fi
