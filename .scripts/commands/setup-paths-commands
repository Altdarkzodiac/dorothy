#!/usr/bin/env bash

function vadd {
	echo "var_add $1 \"$2\";"  # ; needed for fish
}
function vset {
	echo "var_set $1 \"$2\";"  # ; needed for fish
}

# Add local npm executables as early as possible as it is problematic
# add PATH "./node_modules/.bin"
# commented out, as it must go before the default paths
# so we need to add a prepend command


# Others
if is_dir "/usr/local/bin"; then
	vadd PATH "/usr/local/bin"
fi
if is_dir "/usr/local/man"; then
	vadd MANPATH "/usr/local/man"
fi

# Homebrew core
if is_dir "$HOME/.homebrew"; then
	vadd PATH "$HOME/.homebrew/bin"
	vadd MANPATH "$HOME/.homebrew/man"
fi

# Homebrew libs
if command_exists brew; then
	export BREW_PREFIX; BREW_PREFIX=$(brew --prefix)

	# Heroku
	if is_dir "$BREW_PREFIX/heroku/bin"; then
		vadd PATH "$BREW_PREFIX/heroku/bin"
	fi

	# Ruby
	if is_dir "$BREW_PREFIX/opt/ruby/bin"; then
		vadd PATH "$BREW_PREFIX/opt/ruby/bin"
	fi
fi

# Go
if command_exists go; then
	if is_empty_string "$GOPATH"; then
		export GOPATH="$HOME/.go"
		mkdir -p "$GOPATH"
		vset GOPATH "$GOPATH"
	fi
	vadd PATH "$GOPATH/bin"
fi

# Ruby
if command_exists ruby; then
	if is_empty_string "$GEM_HOME"; then
		export GEM_HOME="$HOME/.cache/gems"
		mkdir -p "$GEM_HOME"
		vset GEM_HOME "$GEM_HOME"
	fi
	vadd PATH "$GEM_HOME/bin"
fi

# Java
if is_empty_string "$CLASSPATH"; then
	vadd CLASSPATH "."
fi

# Clojurescript
if is_dir "$HOME/.clojure/clojure-1.8"; then
	vadd PATH "$HOME/.clojure/clojure-1.8.0"
	vadd CLASSPATH "$HOME/.clojure/clojure-1.8.0"
fi

# Yarn
if command_exists yarn; then
	vadd PATH "$(yarn global bin)"
fi

# Local
if is_dir "$HOME/.bin"; then
	vadd PATH "$HOME/.bin"
fi
if is_dir "$HOME/bin"; then
	vadd PATH "$HOME/bin"
fi
